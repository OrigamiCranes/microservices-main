pipeline{
    agent any
    environment{
        DATABASE_URI = credentials("DATABASE_URI")
        app_version=3
        rollback='true'
    }

    parameters{
        stringParam('REPO_URL','')
        stringParam('REPO_NAME','')
        booleanParam('FORCE_BUILD', defaultValue:false, '')
    }

    triggers{
        genericTrigger {
                genericVariables {
                    genericVariable {
                     key("REPO_URL")
                     value("$.repository.git_url")
                     expressionType("JSONPath")
                     regexpFilter("")
                    }
                    genericVariable {
                     key("REPO_NAME")
                     value("$.object_attributes.source.git_http_url")
                     expressionType("JSONPath")
                     regexpFilter("")
                    }
            }
        }
    }
    stages{
        stage("Git Checkout"){
            steps{
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/OrigamiCranes/microservices-math.git']]])
            }
        }

        stage("Testing"){

        }

        stage("Build Image"){
            steps{
                script{
                    if (env.rollback == 'false') {
                        sh "docker rmi -f \$(docker images -qa) || true"
                        sh "docker-compose build --parallel --build-arg APP_VERSION=${app_version} && docker-compose push"
                    }
                }
            }
        }

        stage("Configure Swarm"){
            steps{
                sh "cd ansible && /home/jenkins/.local/bin/ansible-playbook -i inventory playbook.yaml"
            }
        }

        stage("Deploy application"){
            steps{
                sh "bash jenkinsbash/stack.sh"
            }
        }
    }
