pipeline{
    agent any
    environment{
        app_version=3
        rollback='true'
    }

    parameters{
        stringParam('REPO_URL','')
        stringParam('REPO_NAME','')
    }

    triggers{
        genericTrigger {
                genericVariables {
                    genericVariable {
                     key("REPO_URL")
                     value("$.repository.git_url")
                     expressionType("JSONPath")
                     regexpFilter("")
                    }
                    genericVariable {
                     key("REPO_NAME")
                     value("$.object_attributes.source.git_http_url")
                     expressionType("JSONPath")
                     regexpFilter("")
                    }
            }
        }
    }
    stages{
        stage("Git Checkout"){
            steps{
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: ${REPO_URL}]]])
            }
        }

        stage("Testing"){

        }

        stage("Build Image and Push"){
            steps{
                 docker.withRegistry('https://registry.example.com', 'credentials-id') {

                def customImage = docker.build("my-image:${env.BUILD_ID}")

                /* Push the container to the custom Registry */
                customImage.push()
            }
        }

